* Method Overloading
    - When a class has more than one method with same name, then there is method overloading
    - Different parameters:
        + Number of parameters: sum(int a, int b) , sum(int a, int b, int c)
        + DataTypes of parameters: sum(int a, int b) , sum (double a, double b)
        + Squence of the parameters: sum(int a, double b), sum(double a, int b)
        + invalid case : return type does not matter for method OVERLOADING (check this when you hear about OVERRIDING)
        Benefits: reusability, clean coding
* Wrapper Classes
        + Why we need? : to use primitives with our Collection framework
        we are wrapping our primitive data (int, double, char) into Object Types: Integer, Double
        Wrapper Classes brings us useful methods : parsInt(String), Character.isAlphabetic()
* ArrayList is part of Collections, and a very useful DATA STRUCTURE
* Class and Object